ItemType (fields)
->SubType (fields)

Quest (objectives[], startLocation, startCondition)

Weapon (damage, durability)
->RangedWeapon (isAuto, ammo capacity, bulletSpeed, ROF, spread, bonusEffects, bulletArc, numRicochets, jamChance, reloadSpeed?)
->MeleeWeapon (reach, attackSpeed, blockSpeed, blockValue, attackValue, damageType)

Consumable (expiration) #maybe we can make just a consumable class and not separate food and repair
->FoodItem (healType1, healValue1, healType2, healValue2)
->RepairItem (repairType, repairValue)

Equippable(type, hotVal, coldVal, charismaVal, intimidationVal, bluntResist, sharpResist, bonusEffect, durability)

Misc
->Note (text, title)
->QuestItem (quest)
->MiniGameItem (minigameUse, minigameQualities[]) #we could make unique subclasses for each minigame, or we could make just the one and have all of them store numerical values that mean different things in different minigames 
->TradeItem (merchantValues{} minValue, maxValue)
->SpecialItem (specialAbility)

DiscoveredPlace (x, y, details, fastTravel)

#would currency make more sense as a TradeItem or a a Consumable?
